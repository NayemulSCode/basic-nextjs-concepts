import type { Product } from "@/app/api/products/route";
import { notFound } from "next/navigation";

// ‡¶è‡¶ï‡¶ï ‡¶™‡¶£‡ßç‡¶Ø‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡ßá‡¶§‡ßá
async function getProduct(id: string): Promise<Product | null> {
  try {
    const res = await fetch(`http://localhost:3001/api/products/${id}`, {
      cache: "no-store",
    });

    if (!res.ok) {
      if (res.status === 404) {
        return null;
      }
      throw new Error("‡¶™‡¶£‡ßç‡¶Ø‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá");
    }

    const data = await res.json();
    return data.data;
  } catch (error) {
    console.error("Product fetch error:", error);
    throw error;
  }
}

// Dynamic metadata generation
export async function generateMetadata({
  params,
}: {
  params: Promise<{ id: string }>;
}) {
  // const product = await getProduct(params.id);
  const { id } = await params; // ‚úÖ await params
  const product = await getProduct(id);
  if (!product) {
    return {
      title: "‡¶™‡¶£‡ßç‡¶Ø ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø",
    };
  }

  return {
    title: `${product.name} - ‡¶™‡¶£‡ßç‡¶Ø‡ßá‡¶∞ ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§`,
    description: product.description,
  };
}

export default async function ProductDetailPage({
  params,
}: {
  params: { id: string };
}) {
  const { id } = await params;
  const product = await getProduct(id);
  console.log("üöÄ ~ ProductDetailPage ~ product:", product)

  // ‡¶Ø‡¶¶‡¶ø ‡¶™‡¶£‡ßç‡¶Ø ‡¶®‡¶æ ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º
  if (!product) {
    notFound();
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="max-w-4xl mx-auto">
        <div className="bg-white rounded-lg shadow-lg overflow-hidden">
          <div className="p-8">
            <div className="mb-4">
              <span className="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm">
                {product.category}
              </span>
            </div>

            <h1 className="text-4xl font-bold text-gray-900 mb-4">
              {product.name}
            </h1>

            <p className="text-lg text-gray-600 mb-6 leading-relaxed">
              {product.description}
            </p>

            <div className="bg-gray-50 p-6 rounded-lg mb-6">
              <div className="text-3xl font-bold text-green-600 mb-2">
                ‡ß≥{product.price.toLocaleString("bn-BD")}
              </div>
              <p className="text-gray-500">‡¶∏‡¶∞‡ßç‡¶¨‡ßã‡¶ö‡ßç‡¶ö ‡¶Æ‡¶æ‡¶®‡ßá‡¶∞ ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶Ø‡¶º‡¶§‡¶æ</p>
            </div>

            <div className="flex gap-4">
              <button className="flex-1 bg-blue-600 text-white py-3 px-6 rounded-lg hover:bg-blue-700 transition-colors">
                ‡¶ï‡¶æ‡¶∞‡ßç‡¶ü‡ßá ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
              </button>
              <button className="flex-1 bg-green-600 text-white py-3 px-6 rounded-lg hover:bg-green-700 transition-colors">
                ‡¶è‡¶ñ‡¶®‡¶á ‡¶ï‡¶ø‡¶®‡ßÅ‡¶®
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
